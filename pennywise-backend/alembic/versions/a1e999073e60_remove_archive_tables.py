"""remove_archive_tables

Revision ID: a1e999073e60
Revises: 58beec93f4f1
Create Date: 2025-07-01 23:00:46.443103

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a1e999073e60'
down_revision: Union[str, None] = '58beec93f4f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_archived_transactions_id', table_name='archived_transactions')
    op.drop_table('archived_transactions')
    op.drop_index('ix_deleted_transactions_id', table_name='deleted_transactions')
    op.drop_table('deleted_transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deleted_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('original_transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('INCOME', 'EXPENSE', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_mode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('paid_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deletion_reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name='deleted_transactions_deleted_by_fkey'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='deleted_transactions_group_id_fkey'),
    sa.ForeignKeyConstraint(['paid_by'], ['users.id'], name='deleted_transactions_paid_by_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='deleted_transactions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='deleted_transactions_pkey')
    )
    op.create_index('ix_deleted_transactions_id', 'deleted_transactions', ['id'], unique=False)
    op.create_table('archived_transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('original_transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('INCOME', 'EXPENSE', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('note', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_mode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('paid_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('archived_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('archived_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('archive_reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['archived_by'], ['users.id'], name='archived_transactions_archived_by_fkey'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='archived_transactions_group_id_fkey'),
    sa.ForeignKeyConstraint(['paid_by'], ['users.id'], name='archived_transactions_paid_by_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='archived_transactions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='archived_transactions_pkey')
    )
    op.create_index('ix_archived_transactions_id', 'archived_transactions', ['id'], unique=False)
    # ### end Alembic commands ###
